#!/usr/bin/perl

use strict;
use warnings;
use v5.10;
use Perl6::Slurp;
use BlackNoise;
use File::Basename;
use File::Find::Rule;
use utf8::all;

## The CLI interface for blacknoise is different than that of whitenoise.
## Instead of having properly parsed command line arguments, we're using
## 'command flags' instead. Not as nice, but it works.

sub usage {
  my $app = basename($0);
  say "usage: $app --page <config> <page-file>";
  say "or:    $app --list <config> <list-file>";
  say "or:    $app --dir  <config> <directory>";
  say "or:    $app --index <config> <index-cache-file>";
  say "or:    $app --story <config> <story-cache-file>";
  say "or:    $app --regenerate <config>";
  exit 1;
}

if (@ARGV < 2) {
  usage();
}

my ($command, $config, $build) = @ARGV;

if ($command ne '--regenerate' && !$build) {
  usage();
}

my $blacknoise = BlackNoise->new($config);

given ($command) {
  when ('--page') {
    $blacknoise->add_page($build);
  }
  when ('--list') {
    my @pages = slurp($build);
    for my $page (@pages) {
      chomp($page);
      $blacknoise->add_page($page);
    }
  }
  when ('--dir') {
    my @pages = File::Find::Rule->file->name('*.xml')->in($build);
    for my $page (@pages) {
      $blacknoise->add_page($page);
    }
  }
  when ('--index') {
    $blacknoise->regenerate($build);
  }
  when ('--story') {
    $blacknoise->regenerate($build);
  }
  when ('--regenerate') {
    $blacknoise->regenerate();
  }
}

$blacknoise->generate();

## That's all folks.

